@file:Suppress("UNCHECKED_CAST", "RemoveExplicitTypeArguments")

package nl.jolanrensen.tuplesInKotlin

/**
 * This file provides quality of life extensions for Tuples where each of its types is the same.
 * This includes converting to [Iterable] or getting an [Iterator] of a Tuple,
 * as well as taking a single value or slice from a Tuple.
 *
 *
 * by Jolan Rensen, 07-05-2021
 */

operator fun <T, T1: T> Tuple1<T1>.iterator(): Iterator<T> = iterator { yield(first) }
operator fun <T, T1: T, T2: T> Tuple2<T1, T2>.iterator(): Iterator<T> = iterator { yield(first); yield(second) }
operator fun <T, T1: T, T2: T, T3: T> Tuple3<T1, T2, T3>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third) }
operator fun <T, T1: T, T2: T, T3: T, T4: T> Tuple4<T1, T2, T3, T4>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T> Tuple5<T1, T2, T3, T4, T5>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T> Tuple6<T1, T2, T3, T4, T5, T6>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T> Tuple7<T1, T2, T3, T4, T5, T6, T7>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T> Tuple8<T1, T2, T3, T4, T5, T6, T7, T8>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T> Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T> Tuple10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T> Tuple11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T> Tuple12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T> Tuple13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T> Tuple14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T> Tuple15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T> Tuple16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth); yield(sixteenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T> Tuple17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth); yield(sixteenth); yield(seventeenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T> Tuple18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth); yield(sixteenth); yield(seventeenth); yield(eighteenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T> Tuple19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth); yield(sixteenth); yield(seventeenth); yield(eighteenth); yield(nineteenth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T> Tuple20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth); yield(sixteenth); yield(seventeenth); yield(eighteenth); yield(nineteenth); yield(twentieth) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T> Tuple21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth); yield(sixteenth); yield(seventeenth); yield(eighteenth); yield(nineteenth); yield(twentieth); yield(twentyFirst) }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T, T22: T> Tuple22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>.iterator(): Iterator<T> = iterator { yield(first); yield(second); yield(third); yield(fourth); yield(fifth); yield(sixth); yield(seventh); yield(eighth); yield(ninth); yield(tenth); yield(eleventh); yield(twelfth); yield(thirteenth); yield(fourteenth); yield(fifteenth); yield(sixteenth); yield(seventeenth); yield(eighteenth); yield(nineteenth); yield(twentieth); yield(twentyFirst); yield(twentySecond) }

fun <T, T1: T> Tuple1<T1>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T> Tuple2<T1, T2>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T> Tuple3<T1, T2, T3>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T> Tuple4<T1, T2, T3, T4>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T> Tuple5<T1, T2, T3, T4, T5>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T> Tuple6<T1, T2, T3, T4, T5, T6>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T> Tuple7<T1, T2, T3, T4, T5, T6, T7>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T> Tuple8<T1, T2, T3, T4, T5, T6, T7, T8>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T> Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T> Tuple10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T> Tuple11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T> Tuple12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T> Tuple13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T> Tuple14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T> Tuple15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T> Tuple16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T> Tuple17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T> Tuple18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T> Tuple19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T> Tuple20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T> Tuple21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T, T22: T> Tuple22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>.asIterable(): Iterable<T> = object : Iterable<T> { override fun iterator(): Iterator<T> = this@asIterable.iterator() }

fun <T, T1: T> Tuple1<T1>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T> Tuple2<T1, T2>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T> Tuple3<T1, T2, T3>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T> Tuple4<T1, T2, T3, T4>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T> Tuple5<T1, T2, T3, T4, T5>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T> Tuple6<T1, T2, T3, T4, T5, T6>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T> Tuple7<T1, T2, T3, T4, T5, T6, T7>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T> Tuple8<T1, T2, T3, T4, T5, T6, T7, T8>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T> Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T> Tuple10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T> Tuple11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T> Tuple12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T> Tuple13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T> Tuple14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T> Tuple15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T> Tuple16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T> Tuple17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T> Tuple18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T> Tuple19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T> Tuple20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T> Tuple21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>.toList(): List<T> = this.list as List<T>
fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T, T22: T> Tuple22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>.toList(): List<T> = this.list as List<T>

operator fun <T, T1: T> Tuple1<T1>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T> Tuple2<T1, T2>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T> Tuple3<T1, T2, T3>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T> Tuple4<T1, T2, T3, T4>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T> Tuple5<T1, T2, T3, T4, T5>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T> Tuple6<T1, T2, T3, T4, T5, T6>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T> Tuple7<T1, T2, T3, T4, T5, T6, T7>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T> Tuple8<T1, T2, T3, T4, T5, T6, T7, T8>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T> Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T> Tuple10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T> Tuple11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T> Tuple12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T> Tuple13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T> Tuple14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T> Tuple15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T> Tuple16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T> Tuple17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T> Tuple18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T> Tuple19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T> Tuple20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T> Tuple21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>.get(index: Int): T = this.list[index] as T
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T, T22: T> Tuple22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>.get(index: Int): T = this.list[index] as T

operator fun <T, T1: T> Tuple1<T1>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T> Tuple2<T1, T2>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T> Tuple3<T1, T2, T3>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T> Tuple4<T1, T2, T3, T4>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T> Tuple5<T1, T2, T3, T4, T5>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T> Tuple6<T1, T2, T3, T4, T5, T6>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T> Tuple7<T1, T2, T3, T4, T5, T6, T7>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T> Tuple8<T1, T2, T3, T4, T5, T6, T7, T8>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T> Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T> Tuple10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T> Tuple11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T> Tuple12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T> Tuple13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T> Tuple14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T> Tuple15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T> Tuple16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T> Tuple17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T> Tuple18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T> Tuple19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T> Tuple20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T> Tuple21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }
operator fun <T, T1: T, T2: T, T3: T, T4: T, T5: T, T6: T, T7: T, T8: T, T9: T, T10: T, T11: T, T12: T, T13: T, T14: T, T15: T, T16: T, T17: T, T18: T, T19: T, T20: T, T21: T, T22: T> Tuple22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>.get(indexRange: IntRange): List<T> = indexRange.map { this.list[it] as T }


